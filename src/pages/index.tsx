import { type NextPage } from "next";
import { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import { signIn, signOut, useSession } from "next-auth/react";
import { api } from "~/utils/api";
import { PostView } from "~/components/PostView";

const Feed = () => {
  const { data, isLoading } = api.post.getAllPosts.useQuery();

  if (!data) return null;
  if (isLoading) return <div>Loading...</div>;

  return (
    <div className="scrollbar mb-10 flex flex-col gap-4 overflow-y-auto md:max-h-[600px]">
      {data.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const [inputNews, setInputNews] = useState("");
  const { data: sessionData } = useSession();
  const ctx = api.useContext();

  const { mutate } = api.post.createNewPost.useMutation({
    onSuccess: () => {
      setInputNews("");
      void ctx.post.getAllPosts.invalidate();
    },
  });

  return (
    <>
      <Head>
        <title>News Page ðŸ‘€</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-wrap items-start justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c] ">
        <div>
          <div className="m-5 flex items-start justify-center">
            <AuthShowcase />
          </div>
          <div className="flex w-full flex-col items-start justify-center gap-10">
            {sessionData && (
              <div className="flex w-full flex-wrap gap-1">
                <label className="w-full text-white">Enter news:</label>
                <div className="flex w-full max-w-md flex-col">
                  <input
                    type="text"
                    placeholder="..."
                    value={inputNews}
                    onChange={(e) => {
                      setInputNews(e.target.value);
                    }}
                    className="rounded-md p-1 pl-2 focus:outline-none"
                  />
                  <div className="flex justify-end">
                    <button
                      type="submit"
                      className=" rounded-md bg-gradient-to-r from-[#6700f7] to-[#9248f3] p-1 px-6 font-semibold text-white duration-200 active:scale-110"
                      onClick={() => {
                        mutate({ content: inputNews });
                      }}
                    >
                      Submit
                    </button>
                  </div>
                </div>
              </div>
            )}
            <Feed />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data } = useSession();
  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-xl text-white">
        {data && <span>Logged in as {data.user?.name}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={data ? () => void signOut() : () => void signIn()}
      >
        {data ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
