import { type NextPage } from "next";
import { useState } from "react";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import { VscTrash, VscEdit } from "react-icons/vsc";
import { api } from "~/utils/api";

const Home: NextPage = () => {
  const [inputNews, setInputNews] = useState();
  const { data: sessionData } = useSession();

  return (
    <>
      <Head>
        <title>News Page ðŸ‘€</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-wrap items-start justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c] ">
        <div>
          <div className="m-5 flex items-start justify-center">
            <AuthShowcase />
          </div>
          <div className="flex w-full flex-col items-start justify-center gap-10">
            {sessionData && (
              <div className="flex flex-wrap justify-center gap-1">
                <label className="w-full max-w-[220px] text-white">
                  Enter news:
                </label>
                <div className="flex w-full flex-col">
                  <input
                    type="text"
                    placeholder="..."
                    className=" w-full max-w-xs rounded-md p-1 pl-2 focus:outline-none"
                  />
                  <div className="flex w-full justify-end">
                    <button
                      type="submit"
                      className=" rounded-md bg-gradient-to-r from-[#6700f7] to-[#9248f3] p-1 px-6 font-semibold text-white duration-150 active:scale-110 "
                    >
                      Submit
                    </button>
                  </div>
                </div>
              </div>
            )}
            <div className="flex w-full justify-center">
              <div className="h-auto w-full rounded-l-md bg-white ">
                <div className="pl-2">
                  <label className="text-xs text-slate-400">
                    Â· 15 may 2024
                  </label>
                  <p>test</p>
                </div>
              </div>
              <div className="flex flex-wrap justify-end gap-1 rounded-r-md bg-white">
                <button className="flex h-6 w-6 items-center justify-center rounded-l-full rounded-r-md bg-gradient-to-br from-[#0055f3] to-[#00c0fa] pl-1 duration-200 ease-in-out hover:w-10 ">
                  <VscEdit />
                </button>
                <button className="flex h-6 w-6 items-center justify-center rounded-l-full rounded-r-md bg-gradient-to-br from-[#ff042d] to-[#ff4b63] pl-1 duration-200 ease-in-out hover:w-10 ">
                  <VscTrash />
                </button>
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
